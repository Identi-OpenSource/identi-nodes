version: 3.0

constants:
  baseUrl:
    $env: BASE_URL
  port:
    $env: PORT
  apiName:
    $env: API_NAME
  apiVersion:
    $env: API_VERSION
  apiKey:
    $env: AGENT_API_KEY
  agentPath:
    $env: AGENT_PATH
  secretKey:
    $env: SECRET_KEY
  celoRPCUrl:
    $env: CELO_RPC_URL
  celoDIDRegistryAddress:
    $env: CELO_DID_REGISTRY_ADDRESS
  databaseUrl:
    $env: DATABASE_URL
  lacchainNodeAddress:
    $env: LACCHAIN_NODE_ADDRESS
  lacchainDIDRegistryAddress:
    $env: LACCHAIN_DID_REGISTRY_ADDRESS
  lacchainRpcUrl:
    $env: LACCHAIN_RPC_URL
  lacchainExpiration:
    $env: LACCHAIN_EXPIRATION
  lacchainPublicKeyDirectoryBasePath:
    $env: LACCHAIN_PUBLIC_KEY_DIRECTORY_BASE_PATH
  methods:
    - keyManagerGetKeyManagementSystems
    - keyManagerCreate
    - keyManagerGet
    - keyManagerDelete
    - keyManagerImport
    - keyManagerEncryptJWE
    - keyManagerDecryptJWE
    - keyManagerSign
    - keyManagerSharedSecret
    - keyManagerSignJWT
    - keyManagerSignEthTX
    - didManagerGetProviders
    - didManagerFind
    - didManagerGet
    - didManagerGetByAlias
    - didManagerCreate
    - didManagerGetOrCreate
    - didManagerImport
    - didManagerDelete
    - didManagerAddKey
    - didManagerRemoveKey
    - didManagerAddService
    - didManagerRemoveService
    - resolveDid
    - getDIDComponentById
    - discoverDid
    - dataStoreGetMessage
    - dataStoreSaveMessage
    - dataStoreGetVerifiableCredential
    - dataStoreSaveVerifiableCredential
    - dataStoreGetVerifiablePresentation
    - dataStoreSaveVerifiablePresentation
    - dataStoreORMGetIdentifiers
    - dataStoreORMGetIdentifiersCount
    - dataStoreORMGetMessages
    - dataStoreORMGetMessagesCount
    - dataStoreORMGetVerifiableCredentialsByClaims
    - dataStoreORMGetVerifiableCredentialsByClaimsCount
    - dataStoreORMGetVerifiableCredentials
    - dataStoreORMGetVerifiableCredentialsCount
    - dataStoreORMGetVerifiablePresentations
    - dataStoreORMGetVerifiablePresentationsCount
    - handleMessage
    - packDIDCommMessage
    - unpackDIDCommMessage
    - sendDIDCommMessage
    # - sendMessageDIDCommAlpha1
    - createVerifiableCredential
    - createVerifiablePresentation
    - verifyCredential
    - verifyPresentation
    - createSelectiveDisclosureRequest
    - getVerifiableCredentialsForSdr
    - validatePresentationAgainstSdr

    - lacchainCredentialDeploy
    - lacchainCredentialGrantRole
    - lacchainCredentialRevokeRole
    - lacchainCredentialCheckRole
    - lacchainCredentialRegisterCredential
    - lacchainCredentialVerifyCredential
    - lacchainVerifyAddress

# Data bases
dbConnection:
  $require: typeorm#DataSource
  $args:
    - type: postgres
      url:
        $ref: /constants/databaseUrl
      synchronize: false
      migrationsRun: true
      migrations:
        $require: '@veramo/data-store?t=object#migrations'
      logging: false
      entities:
        $require: '@veramo/data-store?t=object#Entities'

# region Server configuration
server:
  baseUrl:
    $ref: /constants/baseUrl
  port:
    $ref: /constants/port
  use:
    # CORS
    - - $require: 'cors?t=function#default'

    # Add agent to the request object
    - - $require: '@veramo/remote-server?t=function#RequestWithAgentRouter'
        $args:
          - agent:
              $ref: /agent

    # DID Documents
    - - $require: '@veramo/remote-server?t=function#WebDidDocRouter'

    # API base path
    - - /messaging
      - $require: '@veramo/remote-server?t=function#MessagingRouter'
        $args:
          - save: true
            metaData:
              type: DIDComm
              value: https

    # region API base path
    - - /agent
      - $require: '@veramo/remote-server?t=function#apiKeyAuth'
        $args:
          - apiKey:
              $ref: /constants/apiKey
      - $require: '@veramo/remote-server?t=function#AgentRouter'
        $args:
          - exposedMethods:
              $ref: /constants/methods

    # Open API schema
    - - /open-api.json
      - $require: '@veramo/remote-server?t=function#ApiSchemaRouter'
        $args:
          - basePath:
              $ref: /constants/agentPath
            securityScheme: bearer
            apiName:
              $ref: /constants/apiName
            apiVersion:
              $ref: /constants/apiVersion
            exposedMethods:
              $ref: /constants/methods

    # Swagger docs
    - - /api-docs
      - $require: swagger-ui-express?t=object#serve
      - $require: swagger-ui-express?t=function#setup
        $args:
          - null
          - swaggerOptions:
              url: '/open-api.json'

    # # region Agent explorer
    # - - $require: agent-explore?t=function#ExplorerRouter
    #     $args:
    #       - - schemaUrl: http://localhost:3330/open-api.json
    #           name: Local agent
    #           apiKey:
    #             $ref: /constants/apiKey

  # Execute during server initialization
  init:
    - $require: '@veramo/remote-server?t=function#createDefaultDid'
      $args:
        - agent:
            $ref: /agent
          baseUrl:
            $ref: /constants/baseUrl
          messagingServiceEndpoint: /messaging

# region Message handler plugin
messageHandler:
  $require: '@veramo/message-handler#MessageHandler'
  $args:
    - messageHandlers:
        - $require: '@veramo/did-comm#DIDCommMessageHandler'
        - $require: '@veramo/did-jwt#JwtMessageHandler'
        - $require: '@veramo/credential-w3c#W3cMessageHandler'
        - $require: '@veramo/selective-disclosure#SdrMessageHandler'

# region DID resolvers
didResolver:
  $require: '@veramo/did-resolver#DIDResolverPlugin'
  $args:
    - resolver:
        $require: did-resolver#Resolver
        $args:
          - ethr:
              $ref: /ethr-did-resolver
            web:
              $ref: /web-did-resolver
            lac:
              $ref: /did-lac-resolver

ethr-did-resolver:
  $require: ethr-did-resolver?t=function&p=/ethr#getResolver
  $args:
    - networks:
        - name: celo
          rpcUrl:
            $ref: /constants/celoRPCUrl
          registry:
            $ref: /constants/celoDIDRegistryAddress

web-did-resolver:
  $require: web-did-resolver?t=function&p=/web#getResolver

did-lac-resolver:
  $require: '@identi-opensource/lacchain?t=function&p=/lac#getResolver'
  $args:
    - registry: '0xAB00e74C1b0A2313f552E869E6d55B5CdA31aFfe'
      networks:
        - name: openprotest
          registry:
            $ref: /constants/lacchainDIDRegistryAddress
          nodeAddress:
            $ref: /constants/lacchainNodeAddress
          rpcUrl:
            $ref: /constants/lacchainRpcUrl

# region Key Manager
keyManager:
  $require: '@veramo/key-manager#KeyManager'
  $args:
    - store:
        $require: '@veramo/data-store#KeyStore'
        $args:
          - $ref: /dbConnection
      kms:
        local:
          $require: '@veramo/kms-local#KeyManagementSystem'
          $args:
            - $require: '@veramo/data-store#PrivateKeyStore'
              $args:
                - $ref: /dbConnection
                - $require: '@veramo/kms-local#SecretBox'
                  $args:
                    - $ref: /constants/secretKey
        lacchain:
          $require: '@identi-opensource/lacchain#KeyManagementSystem'
          $args:
            - $require: '@veramo/data-store#PrivateKeyStore'
              $args:
                - $ref: /dbConnection
                - $require: '@veramo/kms-local#SecretBox'
                  $args:
                    - $ref: /constants/secretKey

# region DID Manager
didManager:
  $require: '@veramo/did-manager#DIDManager'
  $args:
    - store:
        $require: '@veramo/data-store#DIDStore'
        $args:
          - $ref: /dbConnection
      defaultProvider: did:ethr:celo
      providers:
        did:ethr:
          $require: '@veramo/did-provider-ethr#EthrDIDProvider'
          $args:
            - defaultKms: local
              network: mainnet
              rpcUrl: https://mainnet.infura.io/v3/5ffc47f65c4042ce847ef66a3fa70d4c
              gas: 1000001
              ttl: 31104001
        did:ethr:celo:
          $require: '@veramo/did-provider-ethr#EthrDIDProvider'
          $args:
            - defaultKms: local
              network: celo
              rpcUrl:
                $ref: /constants/celoRPCUrl
              registry:
                $ref: /constants/celoDIDRegistryAddress
        did:web:
          $require: '@veramo/did-provider-web#WebDIDProvider'
          $args:
            - defaultKms: local
        did:lac:openprotest:
          $require: '@identi-opensource/lacchain#LacDIDProvider'
          $args:
            - defaultKms: lacchain
              networks:
                - name: openprotest
                  rpcUrl:
                    $ref: /constants/lacchainRpcUrl
                  registry:
                    $ref: /constants/lacchainDIDRegistryAddress
                  nodeAddress:
                    $ref: /constants/lacchainNodeAddress
                  expirationTime:
                    $ref: /constants/lacchainExpiration

didDiscovery:
  $require: '@veramo/did-discovery#DIDDiscovery'
  $args:
    - providers:
        - $require: '@veramo/did-manager#AliasDiscoveryProvider'
        - $require: '@veramo/data-store#DataStoreDiscoveryProvider'

# credential-LD Plugin
credentialIssuerLD:
  $require: '@veramo/credential-ld#CredentialIssuerLD'
  $args:
    - suites:
        - $require: '@veramo/credential-ld#VeramoEd25519Signature2018'
        - $require: '@veramo/credential-ld#VeramoEcdsaSecp256k1RecoverySignature2020'
      contextMaps:
        # The LdDefaultContext is a "catch-all" for now.
        - $require: '@veramo/credential-ld?t=object#LdDefaultContexts'
        - $require: '@transmute/credentials-context?t=object#contexts'
        #  others should be included here

LacchainCredentialPlugin:
  $require: '@identi-opensource/lacchain#LacchainCredentialPlugin'
  $args:
    - keyStore:
        $require: '@veramo/data-store#PrivateKeyStore'
        $args:
          - $ref: /dbConnection
          - $require: '@veramo/kms-local#SecretBox'
            $args:
              - $ref: /constants/secretKey
      nodeAddress:
        $ref: /constants/lacchainNodeAddress
      rpcUrl:
        $ref: /constants/lacchainRpcUrl
      expiration:
        $ref: /constants/lacchainExpiration

LacchainPublicKeyDirectoryPlugin:
  $require: '@identi-opensource/lacchain#LacchainPublicKeyDirectoryPlugin'
  $args:
    - basePath:
        $ref: /constants/lacchainPublicKeyDirectoryBasePath

# Agent
agent:
  $require: '@veramo/core#Agent'
  $args:
    - schemaValidation: false
      plugins:
        - $ref: /keyManager
        - $ref: /didManager
        - $ref: /didResolver
        - $ref: /didDiscovery
        - $ref: /messageHandler
        - $require: '@veramo/did-comm#DIDComm'
        - $require: '@veramo/credential-w3c#CredentialPlugin'
        - $ref: /credentialIssuerLD
        - $require: '@veramo/credential-eip712#CredentialIssuerEIP712'
        - $require: '@veramo/selective-disclosure#SelectiveDisclosure'
        - $require: '@veramo/data-store#DataStore'
          $args:
            - $ref: /dbConnection
        - $require: '@veramo/data-store#DataStoreORM'
          $args:
            - $ref: /dbConnection
        - $ref: /LacchainCredentialPlugin
        - $ref: /LacchainPublicKeyDirectoryPlugin
